version: '3.8'
services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    user: '1000'
    env_file:
      - .env
    command: 'python manage.py runserver 0.0.0.0:8000'
    ports:
      - 8000:8000
    volumes:
      - ./src:/app
      - ./static/downloads:/app/static/downloads
    depends_on:
      - db
      - rabbit
      - celery

  celery:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    env_file:
      - .env
    command: 'celery -A api worker -l INFO'
    user: '1000'
    volumes:
      - ./src:/app
      - ./static/downloads:/app/static/downloads
    depends_on:
      - rabbit

  rabbit:
    image: rabbitmq:3-management
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: rabbitMQ
      RABBITMQ_DEFAULT_PASS: rabbitMQpass
    ports:
      - 5672:5672
      - 15672:15672

  db:
    image: postgres
    restart: always
    hostname: yt_downloader_db
    logging:
      driver: none
    environment:
      POSTGRES_PASSWORD: pgsqlpass
    volumes:
      - .dbdata:/var/lib/postgresql/data
    ports:
      - 5437:5437
    command: -p 5437

  # adminer:
  #   image: adminer
  #   restart: always
  #   logging:
  #     driver: none
  #   ports:
  #     - 8080:8080

  telegram-bot-api:
    image: aiogram/telegram-bot-api:latest
    environment:
      TELEGRAM_API_ID: "${API_ID}"
      TELEGRAM_API_HASH: "${API_HASH}"
    volumes:
      - ../telegram-bot-api-data:/var/lib/telegram-bot-api
    ports:
      - "8081:8081"
